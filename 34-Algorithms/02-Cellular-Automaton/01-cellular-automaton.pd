#N canvas 209 39 1139 779 12;
#X declare -path abs;
#X floatatom 286 584 5 0 1e+06 1 axiom.length - - 0;
#X msg 170 389 reset;
#X floatatom 198 713 5 0 0 1 iteration_n - - 0;
#N canvas 74 64 275 223 random.axiom 0;
#X obj 71 39 inlet;
#X obj 73 173 outlet;
#X obj 73 124 list prepend axiom;
#X obj 71 64 t b f;
#X obj 72 149 list trim;
#N canvas 746 216 473 517 list-random 0;
#X obj 42 53 inlet;
#X msg 42 109 seed \$1;
#X obj 130 350 list prepend;
#X obj 223 351 t a;
#X obj 130 254 until;
#X obj 107 107 t b b b;
#X obj 107 371 list;
#X obj 188 51 inlet;
#X obj 261 52 inlet;
#X obj 261 131 f \$2;
#X obj 272 103 loadbang;
#X obj 42 84 route seed;
#X obj 107 404 outlet;
#X text 42 27 seed/bang;
#X text 189 29 range;
#X text 262 28 length;
#X obj 130 233 f 1;
#X obj 261 151 max 1;
#X obj 130 288 random 2;
#X connect 0 0 11 0;
#X connect 1 0 18 0;
#X connect 2 0 3 0;
#X connect 2 0 6 1;
#X connect 3 0 2 1;
#X connect 4 0 18 0;
#X connect 5 0 6 0;
#X connect 5 1 16 0;
#X connect 5 2 2 1;
#X connect 6 0 12 0;
#X connect 7 0 18 1;
#X connect 8 0 9 0;
#X connect 9 0 17 0;
#X connect 10 0 9 0;
#X connect 11 0 1 0;
#X connect 11 1 5 0;
#X connect 16 0 4 0;
#X connect 17 0 16 1;
#X connect 18 0 2 0;
#X restore 72 98 pd list-random;
#X connect 0 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 5 0;
#X connect 3 1 5 2;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X restore 268 634 pd random.axiom;
#X obj 268 609 f;
#X obj 268 564 bng 15 250 50 0 empty empty random_axiom 17 7 0 10 #fcfcfc #000000 #000000;
#X msg 262 537 axiom 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0;
#X msg 803 599 reset;
#X floatatom 803 686 5 0 0 1 iteration_n - - 0;
#X text 666 388 NB: if fixed mode is specified \, but no third and fourth arguments are provided \, they both default to zero.;
#X msg 817 427 reset;
#X floatatom 816 506 5 0 0 1 iteration_n - - 0;
#X text 656 45 loop (also known as ‘wrap’): the two cells at the extreme left and right ends are considered to be neighbors of each other.;
#X msg 775 84 reset;
#X obj 680 106 bng 30 250 50 0 empty empty iter 3 14 0 10 #fcfcfc #000000 #000000;
#X floatatom 775 168 5 0 0 1 iteration_n - - 0;
#X msg 792 116 axiom 0 0 0 0 1 0 0 0 0;
#X obj 680 431 bng 30 250 50 0 empty empty iter 3 14 0 10 #fcfcfc #000000 #000000;
#X msg 831 454 axiom 0 0 0 0 1 0 0 0 0;
#X obj 680 609 bng 30 250 50 0 empty empty iter 3 14 0 10 #fcfcfc #000000 #000000;
#X msg 818 628 axiom 1;
#X obj 632 11 cnv 15 2 740 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 632 11 cnv 15 500 2 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 632 191 cnv 15 500 2 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X msg 809 240 reset;
#X obj 679 249 bng 30 250 50 0 empty empty iter 3 14 0 10 #fcfcfc #000000 #000000;
#X floatatom 809 324 5 0 0 1 iteration_n - - 0;
#X msg 825 268 axiom 0 0 0 0 1 0 0 0 0;
#X obj 632 41 cnv 15 500 2 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 632 351 cnv 15 500 2 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 632 531 cnv 15 500 2 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 656 706 this rule draws the Sierpinski tiangle \, but the output lines need to be center aligned in a text editor in order to see it (see the 'outcomes/rule90.sierpinski.rtf' file).;
#X text 656 18 boundary modes descriptions and examples:;
#X text 656 358 fixed: the boundary values are fixed. Argument \$3 sets the boundary at the left \, \$4 sets the boundary at the right.;
#X text 32 72 An elementary cellular automaton is a one-dimensional cellular automaton where there are two possible states (labeled 0 and 1) and the rule to determine the state of a cell in the next generation depends only on the current state of the cell and its two immediate neighbors., f 57;
#X text 30 335 inlet 1:;
#X text 90 335 anything sent here computes the next generation.;
#X text 30 365 inlet 2:;
#X text 30 175 ARGUMENTS:;
#X text 30 195 \$1:;
#X text 100 195 Wolfram code number (0..255) to select the rule set for the automaton. https://en.wikipedia.org/wiki/Wolfram_code;
#X text 30 235 \$2:;
#X text 30 275 \$3 and \$4:;
#X obj 13 63 cnv 15 550 2 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 11 166 cnv 15 550 2 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 11 326 cnv 15 550 2 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 90 365 accepts messages to modify the settings as shown below:;
#X obj 96 734 print;
#X obj 680 168 print loop;
#X obj 679 324 print reflect;
#X obj 679 505 print fixed;
#X obj 680 684 print inf;
#X msg 203 443 dump;
#X msg 185 416 last;
#X text 213 388 reset the internal state to zero (= the axiom);
#X text 224 416 save the last iteration to a .txt file;
#X text 239 443 save all computed iterations to a .txt file;
#X floatatom 239 467 5 0 255 1 Wolfram_code_n - - 0;
#X text 301 493 change the rule number (clipped to 0..255);
#X obj 96 624 bng 30 250 50 0 empty empty iter 3 14 0 10 #fcfcfc #000000 #000000;
#X text 24 578 ... and then iterate;
#X text 100 235 boundary mode. Defines the reproductive behaviour for the two cells at the extremities. In-depth description ----->;
#X text 100 275 values to use for the left-hand and right-hand boundaries respectively. They are required only in 'fixed' and 'inf' modes.;
#X text 213 679 NB: changing rule \, mode or axiom via message resets the internal state to zero.;
#X obj 96 684 wolfram 90 loop;
#X text 144 735 outlet 1: outputs the last iteration;
#X text 30 15 Wolfram - an abstraction for the computation of a one-dimensional cellular automaton;
#X text 261 519 set the axiom (at creation \, there is no axiom);
#X text 656 198 reflect (also known as 'reflective'): both cells at the extremities are repeated in order to provide a neighboring cell value for them.;
#X text 663 541 inf (also known as 'infinite'): works like 'fixed' \, but a further zero is always added at both the left and right end of the last state. This way each iteration grows by two element.;
#X obj 680 659 wolfram 90 inf 0 0;
#X obj 679 477 wolfram 30 fixed 0 0;
#X obj 679 296 wolfram 126 reflect;
#X obj 680 144 wolfram 6 loop;
#X msg 239 493 code \$1;
#N canvas 107 125 458 188 credits 0;
#X text 43 20 25/07/2017 - 1 first version by weightless;
#X msg 48 80 browse https://forum.pdpatchrepo.info/topic/10908/wolfram-a-one-dimensional-cellular-automaton-abstraction, f 51;
#X obj 48 132 pdcontrol;
#X connect 1 0 2 0;
#X restore 493 16 pd credits;
#N canvas 408 372 609 235 info 0;
#X msg 60 95 browse https://en.wikipedia.org/wiki/Elementary_cellular_automaton, f 68;
#X msg 74 123 browse https://mathworld.wolfram.com/CellularAutomaton.html;
#X msg 79 153 browse https://mathworld.wolfram.com/ElementaryCellularAutomaton.html, f 69;
#X msg 46 69 browse https://en.wikipedia.org/wiki/Cellular_automaton;
#X obj 44 184 pdcontrol;
#X text 42 32 General information about Cellular Automaton;
#X connect 0 0 4 0;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X restore 468 94 pd info;
#X text 15 537 send an axiom first... --------->;
#X obj 467 121 declare -path abs;
#X text 835 85 click axiom first- then iter;
#X text 862 240 click axiom first- then iter;
#X text 867 426 click axiom first- then iter;
#X text 850 599 click axiom first- then iter;
#X connect 0 0 4 1;
#X connect 1 0 64 1;
#X connect 3 0 64 1;
#X connect 4 0 3 0;
#X connect 5 0 4 0;
#X connect 6 0 64 1;
#X connect 7 0 70 1;
#X connect 10 0 71 1;
#X connect 13 0 73 1;
#X connect 14 0 73 0;
#X connect 16 0 73 1;
#X connect 17 0 71 0;
#X connect 18 0 71 1;
#X connect 19 0 70 0;
#X connect 20 0 70 1;
#X connect 24 0 72 1;
#X connect 25 0 72 0;
#X connect 27 0 72 1;
#X connect 52 0 64 1;
#X connect 53 0 64 1;
#X connect 57 0 74 0;
#X connect 59 0 64 0;
#X connect 64 0 47 0;
#X connect 64 1 2 0;
#X connect 70 0 51 0;
#X connect 70 1 8 0;
#X connect 71 0 50 0;
#X connect 71 1 11 0;
#X connect 72 0 49 0;
#X connect 72 1 26 0;
#X connect 73 0 48 0;
#X connect 73 1 15 0;
#X connect 74 0 64 1;
