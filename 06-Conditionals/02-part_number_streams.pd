#N canvas 459 22 580 801 12;
#X obj 44 240 moses 10;
#X floatatom 45 211 4 0 0 0 - - -, f 4;
#X floatatom 44 267 4 0 0 0 - - -, f 4;
#X floatatom 97 266 4 0 0 0 - - -, f 4;
#X obj 212 238 moses 0;
#X floatatom 212 266 5 0 0 0 - - -, f 5;
#X floatatom 258 264 5 0 0 0 - - -, f 5;
#X floatatom 212 212 5 0 0 0 - - -, f 5;
#X text 43 18 Part number streams;
#X text 39 40 Moses takes numbers and outputs them at left if they're
less than a control value \, and at right if they're greater or equal
to it. The creation argument initializes the control value (10 in this
example) and the right inlet changes it. One way to think of [moses]
is as a filter. For the following example \, imagine that [moses] works
as a low pass and high pass filter simoultaneously -- for non-audio
signals. In the right example you will see that negative numbers will
pass through the left outlet while positive numbers will pass through
the right outlet.;
#X msg 96 348 bang;
#X text 37 293 You can generate weighted random numbers from uniformly
distributed ones. If you just want two possible outcomes with a varying
probability for each one \, you can do as shown:;
#X obj 97 373 random 100;
#X floatatom 151 400 3 0 100 0 - - -, f 3;
#X text 181 398 <-- change probablilty;
#X obj 97 424 moses 80;
#X text 146 350 <-- click to test;
#X text 35 475 This outputs a number at left 80% of the time \, otherwise
at right \, unless you override the "80" using the number box. You
may extend this to more than two possible outcomes \, for instance
like this:;
#X obj 186 576 random 100;
#X obj 186 604 moses 10;
#X obj 239 632 moses 30;
#X text 235 703 20%;
#X text 289 702 70%;
#X obj 239 688 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 292 688 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 97 452 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 150 452 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 292 660 5 0 0 0 - - -, f 5;
#X floatatom 239 660 5 0 0 0 - - -, f 5;
#X floatatom 186 659 5 0 0 0 - - -, f 5;
#X obj 188 552 metro 300;
#X obj 188 530 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 35 728 10% of numbers are between 0 and 9 \, 20% of numbers
between 10 and 29 and 70% are between 30 and 99;
#X text 183 702 10%;
#X obj 186 687 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X connect 0 0 2 0;
#X connect 0 1 3 0;
#X connect 1 0 0 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 7 0 4 0;
#X connect 10 0 12 0;
#X connect 12 0 15 0;
#X connect 13 0 15 1;
#X connect 15 0 25 0;
#X connect 15 1 26 0;
#X connect 18 0 19 0;
#X connect 19 0 29 0;
#X connect 19 1 20 0;
#X connect 20 0 28 0;
#X connect 20 1 27 0;
#X connect 27 0 24 0;
#X connect 28 0 23 0;
#X connect 29 0 34 0;
#X connect 30 0 18 0;
#X connect 31 0 30 0;
